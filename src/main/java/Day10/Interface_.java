package Day10;

/*
接口是java中的一种引用类型，是方法的集合，如果说类的内部封装了成员变量、构造方法和
    成员方法，那么 接口的内部主要就是封装了方法，包含抽象方法（JDK 7及以前），
    默认方法和静态方法（JDK 8），私有方法 （JDK 9）。
引用的数据类型:数组 接口  类

接口使用：
     它不能创建对象，但是可以被实现（ implements ，类似于被继承）。
     一个实现接口的类（可以看做 是接口的子类），需要实现接口中所有的抽象方法，
     创建该类对象，就可以调用方法了，否则它必须是一个抽象 类。


定义格式
      public interface 接口名称{
       抽象方法  使用abstract关键字修饰  可以省略 没有方法体 供子类实现使用
       public abstract void method01();
       默认方法   default 修饰  不可省略  供子类调用或者子类重写
       public default void method02(){
         执行语句
        }
       静态方法  static   供接口直接调用
       public static method03(){
        执行语句
       }

       私有方法 private 修饰 供接口中的默认方法或者静态方法使用
       private void method03(){
         执行语句
         }

      }

 */

public class Interface_ {
    public static void main(String[] args) {

        //抽象方法  必须要全部重写
        Animal an = new Animal();
        an.eat();
        an.slep();

        //默认方法  可以继承也可以重写  通过类的对象来调用
        an.fly();

        //静态方法 只能通过接口名来调用
        LiveAble.run();

        //私有方法：只有默认方法可以调用
        // 私有静态方法:默认方法和静态方法可以调用
        //如果一个接口中有多个默认方法，并且方法中有重复的内容，
        //     那么可以抽取出来，封装到私有方法中，供默认方法 去调用。
        //     从设计的角度讲，私有的方法是对默认方法和静态方法的辅助。
        //     同学们在已学技术的基础上，可以自行测 试。




/*
接口的多实现  一个类能继承一个父类 同事实现多哥接口
    class 类名 extend 父类 implemnts 接口1，接口2，接口3 。。。{
        接口抽象方法重写
        接口默认方法重写（不重名可选）
         }
 */

    // 接口中 有多个抽象方法时 都必须要重写 如果有重名 只需要重写一些

    C c = new C();
    c.show();
    c.showA();
    c.showB();



    //优先级的关系  当一个类既继承了父类 又实现了接口  如果父类与接口方法默认方法
        // 重名，会优先执行父类成员方法。


        E e = new E();
        e.run();



        //接口中，不能定义成员变量，但是可以定义常量，默认使用 public static final修饰
        // 接口中，没有构造方法，不能创建对象
        //接口中，没有静态代码块

    }
}
